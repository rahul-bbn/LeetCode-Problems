/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     struct TreeNode *left;
 *     struct TreeNode *right;
 * };
 */
//Find min value left side of the root(successor of left)
struct TreeNode* findMin(struct TreeNode* node){
    while(node->left!=NULL){
        node=node->left;
    }
    return node;
}

struct TreeNode* deleteNode(struct TreeNode* root, int key) {
    //Traverse the tree
    if(root==NULL){
        return root;
    }
    if(key<root->val){
        root->left=deleteNode(root->left,key);
    }
    else if(key>root->val){
        root->right=deleteNode(root->right,key);
    }
     else{
          if(root->left==NULL && root->right==NULL){
            free(root);
            return NULL;
          }
          else if(root->left==NULL){
            struct TreeNode* temp=root->right;
            free(root);
            return temp;
          }
          else if(root->right==NULL){
            struct TreeNode* temp = root->left;
            free(root);
            return temp;
          }
          else{
               struct TreeNode* temp=findMin(root->right);
               root->val=temp->val;
               root->right=deleteNode(root->right,temp->val);
          }
     }

    return root;
}
